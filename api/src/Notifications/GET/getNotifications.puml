' Notifications are by default activated for:
' 	- messages
' 	- followees' posts
' 	- contributions
' 	- comments
'   - likes
'   - reactions
' 	- friendship requests
'
' In the settings the user should be able to 
' deactivate notifications, or disable certain informations above.
'
' A scan for new notifications is done:
'   - everytime the user opens the app
'   - everytime going to the area where notifications are displayed
'
' A check for all the tables is done to see if the timestamp of the row
' is more recent than the timestamp of the last time notifications were checked.
'
' A new notification leaves a red dot at the edge to mark it as a new notification
' An old notification (already viewed by the user) is chached and cleared every certain amount of time.
' There must be a setting for how long should old notifications live.
' The user might want to clear a single old notification. He can do that by swiping on it (mobile)
' Or clicking a clear button on desktop
'
' Notifications in Crah are liquid, they never get stored in a table.
@startuml getNotifications-Request
!theme toy
title "getNotifications /api/notifications GET Request"

json Auth {
    "sub": "",
    "iat": "",
    "exp": ""
}
@enduml
@startuml getNotifications-Response
!theme toy
title "getNotifications /api/notifications GET Response"

package "notifications.zip" {
    folder "users" {
        folder "pfps" {
            file "userId-pfp.png"
        }

        json "users.json" {
            "users": [
                {
                    "userId": "",
                    "username": ""
                }
            ]
        }
    }

    json "notifications.json" {
        "friendshipRequests": [],
        "messages": [],
        "follows": [],
        "likes": [],
        "reactions": [],
        "comments": [],
        "commentLikes": [],
        "contributions": [],
        "contributionLikes": [],
        "contributionComments": [],
        "contributionCommentLikes": [],
        "posts": [
            {
                "postId": "",
                "userId": "",
                "title": "",
                "type": "",
                "timestamp": "",
                "duration": ""
            }
        ]
    }
}
@enduml
