@startuml addNewTrick-Request
!theme toy
skinparam linetype ortho
title "addNewTrick /api/tricks POST Request"

json Data {
    "parts": [],
    "spots": [
        {
            "spot": "",
            "date": ""
        }
    ],
    "isPinned": "",
    ' **confirmation** should be true when the user wants to actually post the trick,
    ' while when creating the trick, a request with **confirmation** = false 
    ' tells the server to calculate the points of the trick, keep them stored in a 
    ' temporary table, and send them to the frontend for preview.
    '
    ' This way we avoid:
    ' - sending the points from the client, so we are sure they are genuine
    ' - calculating the points twice for preview and creation
    "confirmation": ""
}

note left of Data
    If **isPinned** = true, the trick is pinned under the bio (maximum 5 tricks).
end note

note left of Data 
    **parts** are necessary as when the user confirms the suggested word, that might comprise
    more than one word, for example "nothing front scoot".
    Just trick name is saved after the calculation of the points.
end note

note bottom of Data
    **confirmation** should be true when the user wants to actually post the trick,
    while when creating the trick, a request with **confirmation** = false 
    tells the server to calculate the points of the trick and add it to the AllTricks table
    if not already present, keep the AllTricksId stored in a temporary table,
    and send the AllTricksData to the frontend for preview.
    
    This way we avoid:
    - sending the points from the client, so we are sure they are genuine
    - calculating the points twice for preview and creation
end note

json Auth {
    "sub": "",
    "iat": "",
    "exp": ""
}

Data --* Auth
@enduml
@startuml addNewTrick-Response
!theme toy
skinparam linetype ortho
title "addNewTrick /api/tricks POST Response"

json Data  {
    "points": "",
    "types": [],
    "trickRanking": "",
    "hardestSpot": "",
    "firstTimeLanded": ""
}
@enduml
